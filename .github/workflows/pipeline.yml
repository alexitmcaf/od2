name: Odoo CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: odoo
          POSTGRES_PASSWORD: odoo
          POSTGRES_DB: odoo
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U odoo" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      
    - name: Debug repository files
      run: ls -la

    - name: Verify addons directory
      run: |
        if [ ! -d ./addons ]; then
          echo "addons directory not found, creating an empty directory."
          mkdir -p ./addons
        fi

    - name: Copy addons to docker folder
      run: |
        mkdir -p docker/addons
        if [ "$(ls -A ./addons)" ]; then
          cp -r ./addons/* ./docker/addons/
        else
          echo "No addons to copy."
        fi

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build Docker Image
      run: |
        docker build -t odoo:16 -f docker/Dockerfile .

    - name: Start Odoo Service
      run: |
        docker run -d --name odoo-test --network host \
          -e DB_HOST=localhost -e DB_PORT=5432 -e DB_USER=odoo -e DB_PASSWORD=odoo \
          odoo:16

    - name: Verify Odoo is Running
      run: |
        sleep 20  # Wait for Odoo to fully start
        curl --fail http://localhost:8069 || (echo "Odoo failed to start" && exit 1)

    - name: Stop and Clean Up
      if: always()
      run: |
        docker stop odoo-test || true
        docker rm odoo-test || true
